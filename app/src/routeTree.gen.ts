/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ReportsListReportsRouteImport } from './routes/reports/list-reports'
import { Route as DashboardListDashboardsRouteImport } from './routes/dashboard/list-dashboards'
import { Route as DashboardDashboardIdRouteImport } from './routes/dashboard/$dashboardId'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminReportsRouteImport } from './routes/admin/reports'
import { Route as AdminGroupsRouteImport } from './routes/admin/groups'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as AdminAdmin_dashboardRouteImport } from './routes/admin/admin_dashboard'
import { Route as AccountSettingsRouteImport } from './routes/account/settings'
import { Route as AccountProfileRouteImport } from './routes/account/profile'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsListReportsRoute = ReportsListReportsRouteImport.update({
  id: '/reports/list-reports',
  path: '/reports/list-reports',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardListDashboardsRoute = DashboardListDashboardsRouteImport.update({
  id: '/dashboard/list-dashboards',
  path: '/dashboard/list-dashboards',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardDashboardIdRoute = DashboardDashboardIdRouteImport.update({
  id: '/dashboard/$dashboardId',
  path: '/dashboard/$dashboardId',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminReportsRoute = AdminReportsRouteImport.update({
  id: '/admin/reports',
  path: '/admin/reports',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminGroupsRoute = AdminGroupsRouteImport.update({
  id: '/admin/groups',
  path: '/admin/groups',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminAdmin_dashboardRoute = AdminAdmin_dashboardRouteImport.update({
  id: '/admin/admin_dashboard',
  path: '/admin/admin_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountSettingsRoute = AccountSettingsRouteImport.update({
  id: '/account/settings',
  path: '/account/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountProfileRoute = AccountProfileRouteImport.update({
  id: '/account/profile',
  path: '/account/profile',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account/profile': typeof AccountProfileRoute
  '/account/settings': typeof AccountSettingsRoute
  '/admin/admin_dashboard': typeof AdminAdmin_dashboardRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/groups': typeof AdminGroupsRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/users': typeof AdminUsersRoute
  '/dashboard/$dashboardId': typeof DashboardDashboardIdRoute
  '/dashboard/list-dashboards': typeof DashboardListDashboardsRoute
  '/reports/list-reports': typeof ReportsListReportsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account/profile': typeof AccountProfileRoute
  '/account/settings': typeof AccountSettingsRoute
  '/admin/admin_dashboard': typeof AdminAdmin_dashboardRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/groups': typeof AdminGroupsRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/users': typeof AdminUsersRoute
  '/dashboard/$dashboardId': typeof DashboardDashboardIdRoute
  '/dashboard/list-dashboards': typeof DashboardListDashboardsRoute
  '/reports/list-reports': typeof ReportsListReportsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/account/profile': typeof AccountProfileRoute
  '/account/settings': typeof AccountSettingsRoute
  '/admin/admin_dashboard': typeof AdminAdmin_dashboardRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/groups': typeof AdminGroupsRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/users': typeof AdminUsersRoute
  '/dashboard/$dashboardId': typeof DashboardDashboardIdRoute
  '/dashboard/list-dashboards': typeof DashboardListDashboardsRoute
  '/reports/list-reports': typeof ReportsListReportsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account/profile'
    | '/account/settings'
    | '/admin/admin_dashboard'
    | '/admin/dashboard'
    | '/admin/groups'
    | '/admin/reports'
    | '/admin/users'
    | '/dashboard/$dashboardId'
    | '/dashboard/list-dashboards'
    | '/reports/list-reports'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account/profile'
    | '/account/settings'
    | '/admin/admin_dashboard'
    | '/admin/dashboard'
    | '/admin/groups'
    | '/admin/reports'
    | '/admin/users'
    | '/dashboard/$dashboardId'
    | '/dashboard/list-dashboards'
    | '/reports/list-reports'
  id:
    | '__root__'
    | '/'
    | '/account/profile'
    | '/account/settings'
    | '/admin/admin_dashboard'
    | '/admin/dashboard'
    | '/admin/groups'
    | '/admin/reports'
    | '/admin/users'
    | '/dashboard/$dashboardId'
    | '/dashboard/list-dashboards'
    | '/reports/list-reports'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountProfileRoute: typeof AccountProfileRoute
  AccountSettingsRoute: typeof AccountSettingsRoute
  AdminAdmin_dashboardRoute: typeof AdminAdmin_dashboardRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminGroupsRoute: typeof AdminGroupsRoute
  AdminReportsRoute: typeof AdminReportsRoute
  AdminUsersRoute: typeof AdminUsersRoute
  DashboardDashboardIdRoute: typeof DashboardDashboardIdRoute
  DashboardListDashboardsRoute: typeof DashboardListDashboardsRoute
  ReportsListReportsRoute: typeof ReportsListReportsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports/list-reports': {
      id: '/reports/list-reports'
      path: '/reports/list-reports'
      fullPath: '/reports/list-reports'
      preLoaderRoute: typeof ReportsListReportsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/list-dashboards': {
      id: '/dashboard/list-dashboards'
      path: '/dashboard/list-dashboards'
      fullPath: '/dashboard/list-dashboards'
      preLoaderRoute: typeof DashboardListDashboardsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/$dashboardId': {
      id: '/dashboard/$dashboardId'
      path: '/dashboard/$dashboardId'
      fullPath: '/dashboard/$dashboardId'
      preLoaderRoute: typeof DashboardDashboardIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/reports': {
      id: '/admin/reports'
      path: '/admin/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AdminReportsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/groups': {
      id: '/admin/groups'
      path: '/admin/groups'
      fullPath: '/admin/groups'
      preLoaderRoute: typeof AdminGroupsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/admin_dashboard': {
      id: '/admin/admin_dashboard'
      path: '/admin/admin_dashboard'
      fullPath: '/admin/admin_dashboard'
      preLoaderRoute: typeof AdminAdmin_dashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/settings': {
      id: '/account/settings'
      path: '/account/settings'
      fullPath: '/account/settings'
      preLoaderRoute: typeof AccountSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/profile': {
      id: '/account/profile'
      path: '/account/profile'
      fullPath: '/account/profile'
      preLoaderRoute: typeof AccountProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountProfileRoute: AccountProfileRoute,
  AccountSettingsRoute: AccountSettingsRoute,
  AdminAdmin_dashboardRoute: AdminAdmin_dashboardRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AdminGroupsRoute: AdminGroupsRoute,
  AdminReportsRoute: AdminReportsRoute,
  AdminUsersRoute: AdminUsersRoute,
  DashboardDashboardIdRoute: DashboardDashboardIdRoute,
  DashboardListDashboardsRoute: DashboardListDashboardsRoute,
  ReportsListReportsRoute: ReportsListReportsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
