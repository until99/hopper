/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UsersRouteImport } from './routes/users'
import { Route as DashboardsRouteImport } from './routes/dashboards'
import { Route as AccountSettingsRouteImport } from './routes/account/settings'
import { Route as AccountProfileRouteImport } from './routes/account/profile'

const UsersRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardsRoute = DashboardsRouteImport.update({
  id: '/dashboards',
  path: '/dashboards',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountSettingsRoute = AccountSettingsRouteImport.update({
  id: '/account/settings',
  path: '/account/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountProfileRoute = AccountProfileRouteImport.update({
  id: '/account/profile',
  path: '/account/profile',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/dashboards': typeof DashboardsRoute
  '/users': typeof UsersRoute
  '/account/profile': typeof AccountProfileRoute
  '/account/settings': typeof AccountSettingsRoute
}
export interface FileRoutesByTo {
  '/dashboards': typeof DashboardsRoute
  '/users': typeof UsersRoute
  '/account/profile': typeof AccountProfileRoute
  '/account/settings': typeof AccountSettingsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/dashboards': typeof DashboardsRoute
  '/users': typeof UsersRoute
  '/account/profile': typeof AccountProfileRoute
  '/account/settings': typeof AccountSettingsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/dashboards' | '/users' | '/account/profile' | '/account/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/dashboards' | '/users' | '/account/profile' | '/account/settings'
  id:
    | '__root__'
    | '/dashboards'
    | '/users'
    | '/account/profile'
    | '/account/settings'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardsRoute: typeof DashboardsRoute
  UsersRoute: typeof UsersRoute
  AccountProfileRoute: typeof AccountProfileRoute
  AccountSettingsRoute: typeof AccountSettingsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboards': {
      id: '/dashboards'
      path: '/dashboards'
      fullPath: '/dashboards'
      preLoaderRoute: typeof DashboardsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/settings': {
      id: '/account/settings'
      path: '/account/settings'
      fullPath: '/account/settings'
      preLoaderRoute: typeof AccountSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/profile': {
      id: '/account/profile'
      path: '/account/profile'
      fullPath: '/account/profile'
      preLoaderRoute: typeof AccountProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  DashboardsRoute: DashboardsRoute,
  UsersRoute: UsersRoute,
  AccountProfileRoute: AccountProfileRoute,
  AccountSettingsRoute: AccountSettingsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
